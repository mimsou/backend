security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: login
 
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: ~
            form_login:
                # Here authentication will happen (Token Generatrion)
                check_path: /api/login
                username_parameter: login
                password_parameter: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            user_checker: App\Security\UserChecker
        api:
            pattern: ^/api/
            stateless: true
            anonymous: ~
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            
        main:
            anonymous: ~
            provider: app_user_provider
            
 
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing the Swagger UI
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/user, roles: IS_AUTHENTICATED_ANONYMOUSLY }
